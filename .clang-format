---
Language:        C
BasedOnStyle:  Mozilla
IndentWidth:     4
ContinuationIndentWidth: 4
ColumnLimit: 100
# Breaks after return type in function (only in .c, skipping .h definitions)
AlwaysBreakAfterReturnType: AllDefinitions
AlwaysBreakAfterDefinitionReturnType: TopLevel
AllowAllArgumentsOnNextLine: false
AllowShortBlocksOnASingleLine: Always
AllowShortLoopsOnASingleLine: true
AllowShortIfStatementsOnASingleLine: AllIfsAndElse
AlignAfterOpenBracket: BlockIndent
PenaltyBreakAssignment: 1000
PenaltyBreakString: 10000
PenaltyBreakBeforeFirstCallParameter: 0
PenaltyBreakOpenParenthesis: 0
PenaltyExcessCharacter: 100
# PenaltyBreakComment: 10
# PenaltyBreakScopeResolution: 0
# PenaltyIndentedWhitespace: 1
AlignOperands: AlignAfterOperator
BinPackArguments: false
MaxEmptyLinesToKeep: 2
InsertBraces: true
BreakStringLiterals: false
BreakBeforeTernaryOperators: true
IndentPPDirectives: AfterHash
IfMacros: [json$key_match, json$key_invalid]
ForEachMacros: [for$each, for$eachp, for$iter, e$except, e$except_silent, e$except_errno, e$except_null, e$except_true]
---
Language:        Cpp
BasedOnStyle:  Mozilla
IndentWidth:     4
ContinuationIndentWidth: 4
ColumnLimit: 100
# Breaks after return type in function (only in .c, skipping .h definitions)
AlwaysBreakAfterReturnType: AllDefinitions
AlwaysBreakAfterDefinitionReturnType: TopLevel
AllowAllArgumentsOnNextLine: false
AllowShortBlocksOnASingleLine: Always
AllowShortLoopsOnASingleLine: true
AllowShortIfStatementsOnASingleLine: AllIfsAndElse
AlignAfterOpenBracket: BlockIndent
PenaltyBreakAssignment: 1000
PenaltyBreakString: 10000
PenaltyBreakBeforeFirstCallParameter: 0
PenaltyBreakOpenParenthesis: 0
PenaltyExcessCharacter: 100
# PenaltyBreakComment: 10
# PenaltyBreakScopeResolution: 0
# PenaltyIndentedWhitespace: 1
AlignOperands: AlignAfterOperator
BinPackArguments: false
MaxEmptyLinesToKeep: 2
InsertBraces: true
BreakStringLiterals: false
BreakBeforeTernaryOperators: true
IndentPPDirectives: AfterHash
IfMacros: [json$key_match, json$key_invalid]
ForEachMacros: [for$each, for$iter, e$except, e$except_silent, e$except_errno, e$except_null, e$except_true]
...

